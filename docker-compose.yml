version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - REDIS_URL=${REDIS_URL}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - PORT=8000
    command: python3 -m uvicorn main:app --host 0.0.0.0 --port 8000
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - app-network
    depends_on:
      - redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    platform: linux/amd64
    env_file:
      - .env
    environment:
      - REDIS_URL=${REDIS_URL}
    command: celery -A app.core.celery_app worker --loglevel=info --concurrency=4 --max-tasks-per-child=100 --pool=prefork -Q default
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    shm_size: 2g
    tmpfs:
      - /tmp:exec,mode=1777
    networks:
      - app-network
    depends_on:
      - redis

  selenium-worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    platform: linux/amd64
    env_file:
      - .env
    environment:
      - REDIS_URL=${REDIS_URL}
    command: celery -A app.core.celery_app worker --loglevel=info --concurrency=1 --max-tasks-per-child=10 --pool=prefork -Q selenium --hostname=selenium@%h
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    shm_size: 2g
    tmpfs:
      - /tmp:exec,mode=1777
    networks:
      - app-network
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
